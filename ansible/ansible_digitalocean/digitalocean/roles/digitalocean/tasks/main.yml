        
  - name: ensure key exists at DigitalOcean
    digital_ocean: >
      state=present
      command=ssh
      name=my_ssh_key
      ssh_pub_key={{ lookup('file', '../../../../.ssh/id_rsa.pub') }}
      api_token={{ do_token }}
    register: my_ssh_key


  - name: ensure droplets exist
    digital_ocean: >
      state=present
      command=droplet
      name={{ item }}
      unique_name=yes
      size_id=512mb
      private_networking=yes
      region_id=sgp1
      image_id=ubuntu-16-04-x64
      ssh_key_ids={{ my_ssh_key.ssh_key.id }}
      api_token={{ do_token }}
    with_items: "{{droplets}}"
    register: droplet_details

  - name: Add new host to our inventory.
    add_host:
      name: "{{ item }}"
      groups: do
    with_items:
     - "{{ droplet_details.results|map(attribute='droplet.ip_address')|list }}"

  - debug: 
      msg="IP is {{ item }}"
    with_items:
     - "{{ droplet_details.results|map(attribute='droplet.ip_address')|list }}"

  - hosts: do
    remote_user: root
    gather_facts: False
    
    tasks:
    - debug: var=ansible_all_ipv4_addresses
    - debug: var=ansible_default_ipv4.address